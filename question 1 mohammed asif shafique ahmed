#include <bits/stdc++.h>
using namespace std;
const int N = 1e6;
bool fourDiv[N + 1];
void fourDistinctFactors()
{
	bool primeAll[N + 1];
	memset(primeAll, true, sizeof(primeAll));

	for (int p = 2; p * p <= N; p++) 
	{
		if (primeAll[p] == true) 
		{
			for (int i = p * 2; i <= N; i += p)
			{
				primeAll[i] = false;
			}
		}
	}
	vector<int> prime;
	for (int p = 2; p <= N; p++)
	{
		if (primeAll[p])
		{
			prime.push_back(p);
		}
	}
	memset(fourDiv, false, sizeof(fourDiv));
	for (int i = 0; i < prime.size(); ++i) 
	{
		int p = prime[i];
		if (1LL * p * p * p <= N)
		{
			fourDiv[p * p * p] = true;
		}

		for (int j = i + 1; j < prime.size(); ++j) 
		{
			int q = prime[j];

			if (1LL * p * q > N)
				break;

			fourDiv[p * q] = true;
		}
	}
}

// Driver program
int main()
{
	#ifndef ONLINE_JUDGE 
	freopen("input.txt", "r", stdin); 
	freopen("error.txt", "w", stderr); 
	freopen("output.txt", "w", stdout); 
	#endif 
	fourDistinctFactors();
	int num;
	cin>>num;
	int count=0;
	for(int i=0; i<=num; i++)
	{
		if (fourDiv[i])
		{
			count++;
		}
	}
	//cout<<count;
	if(count==0)
	{
		cout << "Please provide a valid positive integer\n";
	}
	else
	{
		cout<<count;
	}
	return 0;
}
